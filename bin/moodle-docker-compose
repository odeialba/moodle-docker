#!/usr/bin/env bash
set -e

if [ ! -d "$MOODLE_DOCKER_WWWROOT" ];
then
    echo 'Error: $MOODLE_DOCKER_WWWROOT is not set or not an existing directory'
    exit 1
fi

# Set default environment variables
# PHP Version.
export MOODLE_DOCKER_PHP_VERSION=${MOODLE_DOCKER_PHP_VERSION:-7.4}
# Database.
export MOODLE_DOCKER_DB=${MOODLE_DOCKER_DB:-pgsql}
# Webserver host (don't forget to add this to /etc/hosts)
export MOODLE_DOCKER_WEB_HOST=${MOODLE_DOCKER_WEB_HOST:-moodle.local}
# Webserver port
export MOODLE_DOCKER_WEB_PORT=${MOODLE_DOCKER_WEB_PORT:-80}
# Selenium port for VNC (to be able to see behat tests in action)
export MOODLE_DOCKER_SELENIUM_VNC_PORT=${MOODLE_DOCKER_SELENIUM_VNC_PORT:-54321}

ymlfiles=(base service.mail)
containsdb=true

# DB type
cleanparams=()
for var in "$@"; do
    case "$var" in
        pgsql|mysql|oracle|mariadb|mssql)
            export MOODLE_DOCKER_DB=$var
            ;;
        php81|php.81|php8.1|php.8.1)
            export MOODLE_DOCKER_PHP_VERSION=8.1
            ;;
        php8|php80|php.80|php8.0|php.8.0)
            export MOODLE_DOCKER_PHP_VERSION=8.0
            ;;
        php70|php.74|php7.4|php.7.4)
            export MOODLE_DOCKER_PHP_VERSION=7.4
            ;;
        php73|php.73|php7.3|php.7.3)
            export MOODLE_DOCKER_PHP_VERSION=7.3
            ;;
        php72|php.72|php7.2|php.7.2)
            export MOODLE_DOCKER_PHP_VERSION=7.2
            ;;
        php71|php.71|php7.1|php.7.1)
            export MOODLE_DOCKER_PHP_VERSION=7.1
            ;;
        php7|php70|php.70|php7.0|php.7.0)
            export MOODLE_DOCKER_PHP_VERSION=7.0
            ;;
        stop)
            ymlfiles+=(db.pgsql db.mysql db.oracle db.mariadb db.mssql)

            cleanparams+=("$var")
            containsdb=false
            ;;
        *)
            cleanparams+=("$var")
            ;;
    esac
done
set -- "${cleanparams[@]}"

if [ "$containsdb" = true ] ; then
    # Database flavour
    ymlfiles+=("db.${MOODLE_DOCKER_DB}")
fi

# Hide orphans warning
export COMPOSE_IGNORE_ORPHANS=True

# Nasty portable way to the directory of this script, following symlink,
# because readlink -f not on OSX. Thanks stack overflow..
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
basedir="$( cd -P "$( dirname "$SOURCE" )/../" && pwd )"
export ASSETDIR="${basedir}/assets"

# Fix mobile app deprecated variables
if [ ! -z "$MOODLE_APP_VERSION" ];
then
    echo 'Warning: $MOODLE_APP_VERSION is deprecated, use $MOODLE_DOCKER_APP_VERSION instead'

    if [ -z "$MOODLE_DOCKER_APP_VERSION" ];
    then
        export MOODLE_DOCKER_APP_VERSION="$MOODLE_APP_VERSION"
    fi
fi

# Guess mobile app runtime
if [ -z "$MOODLE_DOCKER_APP_RUNTIME" ];
then
    if [[ ! -z "$MOODLE_DOCKER_APP_PATH" ]];
    then
        appversion="$(cat $MOODLE_DOCKER_APP_PATH/package.json | grep -oP '"version": "\K\d\.\d\.\d{1,2}(-\w+)?(?=")')"
    elif [[ ! -z "$MOODLE_DOCKER_APP_VERSION" ]];
    then
        appversion=$MOODLE_DOCKER_APP_VERSION
    fi

    if [[ ! -z $appversion ]];
    then
        if [[ ! -z "$(echo $appversion | grep -oP '\d\.\d\.\d{1,2}')" ]];
        then
            appmajorversion="$(echo $appversion | grep -oP '\d(?=\.\d\.\d{1,2})')"
            appminorversion="$(echo $appversion | grep -oP '\d\.\K\d(?=\.\d{1,2})')"
            apppatchversion="$(echo $appversion | grep -oP '\d\.\d\.\K\d{1,2}')"

            if (( $appmajorversion > 3 ));
            then
                export MOODLE_DOCKER_APP_RUNTIME="ionic5"
            elif (( $appminorversion != 9));
            then
                export MOODLE_DOCKER_APP_RUNTIME="ionic3"
            elif (( $apppatchversion < 5 ));
            then
                export MOODLE_DOCKER_APP_RUNTIME="ionic3"
            else
                export MOODLE_DOCKER_APP_RUNTIME="ionic5"
            fi
        else
            export MOODLE_DOCKER_APP_RUNTIME="ionic5"
        fi
    fi
fi

# Mobile app for development
if [[ ! -z "$MOODLE_DOCKER_BROWSER" ]] && [[ "$MOODLE_DOCKER_BROWSER" == "chrome" ]] && [[ ! -z "$MOODLE_DOCKER_APP_PATH" ]];
then
    ymlfiles+=("moodle-app-dev-${MOODLE_DOCKER_APP_RUNTIME}")

# Mobile app using a docker image
elif [[ ! -z "$MOODLE_DOCKER_BROWSER" ]] && [[ "$MOODLE_DOCKER_BROWSER" == "chrome" ]] && [[ ! -z "$MOODLE_DOCKER_APP_VERSION" ]];
then
    ymlfiles+=("moodle-app-${MOODLE_DOCKER_APP_RUNTIME}")
fi

# Selenium browser
if [[ ! -z "$MOODLE_DOCKER_BROWSER" ]] && [[ "$MOODLE_DOCKER_BROWSER" != "firefox" ]];
then
    ymlfiles+=("selenium.${MOODLE_DOCKER_BROWSER}")
fi

# Selenium VNC port
export MOODLE_DOCKER_SELENIUM_SUFFIX=""
if [[ $MOODLE_DOCKER_SELENIUM_VNC_PORT == *":"* ]] || [[ $MOODLE_DOCKER_SELENIUM_VNC_PORT -gt 0 ]]
then
    export MOODLE_DOCKER_SELENIUM_SUFFIX="-debug"
    # If no bind ip has been configured (bind_ip:port), default to 127.0.0.1
    if [[ ! $MOODLE_DOCKER_SELENIUM_VNC_PORT == *":"* ]]
    then
        MOODLE_DOCKER_SELENIUM_VNC_PORT=127.0.0.1:$MOODLE_DOCKER_SELENIUM_VNC_PORT
    fi
    ymlfiles+=(selenium.debug)
fi

# External services
if [[ ! -z "$MOODLE_DOCKER_PHPUNIT_EXTERNAL_SERVICES" ]];
then
    ymlfiles+=(phpunit-external-services)
fi

# Webserver host
export MOODLE_DOCKER_WEB_HOST=${MOODLE_DOCKER_WEB_HOST:-localhost}

# Webserver port
export MOODLE_DOCKER_WEB_PORT=${MOODLE_DOCKER_WEB_PORT:-8000}
if [[ $MOODLE_DOCKER_WEB_PORT == *":"* ]] || [[ $MOODLE_DOCKER_WEB_PORT -gt 0 ]]
then
    # If no bind ip has been configured (bind_ip:port), default to 127.0.0.1
    if [[ ! $MOODLE_DOCKER_WEB_PORT == *":"* ]]
    then
        MOODLE_DOCKER_WEB_PORT=127.0.0.1:$MOODLE_DOCKER_WEB_PORT
    fi
    ymlfiles+=(webserver.port)
fi


# Mac OS Compatbility
if [[ "$(uname)" == "Darwin" ]]; then
    # Support https://docs.docker.com/docker-for-mac/osxfs-caching/
    # ymlfiles+=(volumes-cached)
    # https://vivait.co.uk/labs/docker-for-mac-performance-using-nfs
    ymlfiles+=(volumes-nfs)
    # ymlfiles+=(volumes-sync)
fi

dockercompose="docker-compose"

for filename in ${ymlfiles[@]}
do
    fullfile="${basedir}/${filename}.yml"
    if [ -f "${fullfile}" ]
    then
        dockercompose="${dockercompose} -f ${fullfile}"
    fi
done

$dockercompose "$@"
